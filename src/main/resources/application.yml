server:
  port: 8080
  servlet:
    context-path: /api/v1

spring:
  application:
    name: tactical-command-hub
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/tactical_command_hub
    username: tactical_user
    password: ${DB_PASSWORD:tactical_pass}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/.well-known/jwks.json}

# Application specific configuration
tactical:
  security:
    jwt:
      secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
      expiration: 86400000 # 24 hours in milliseconds
      refresh-expiration: 604800000 # 7 days in milliseconds
    
  audit:
    enabled: true
    retention-days: 365
    
  operational:
    max-units-per-mission: 100
    mission-timeout-hours: 72
    threat-assessment-refresh-minutes: 15
    
  monitoring:
    health-check-interval: 30
    metrics-collection: true

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  info:
    title: Tactical Command Hub API
    description: Java-based Command and Control System Simulator API
    version: 1.0.0
    contact:
      name: Tactical Command Hub Team
      email: support@caribouthunder.com

# Logging configuration
logging:
  level:
    com.caribouthunder.tactical: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/tactical-command-hub.log

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
      
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    
  h2:
    console:
      enabled: true
      path: /h2-console
      
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

---
# Test Profile  
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
    
  jpa:
    hibernate:
      ddl-auto: create-drop

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
  jpa:
    show-sql: false
    
logging:
  level:
    com.caribouthunder.tactical: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
